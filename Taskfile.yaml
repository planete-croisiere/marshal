version: '3'

tasks:
    fixtures:
        desc: Generate fixtures for dev environment
        cmds:
            - task: vendor
            - task: node_modules
            - bin/console doctrine:database:drop --force --env=dev
            - bin/console doctrine:database:create --env=dev
            - bin/console doctrine:schema:create --env=dev
            - bin/console doctrine:fixtures:load --no-interaction --env=dev

    oauth2-server-init:
        desc: Generate private and public keys for OAuth2 Server
        cmds:
            - mkdir -p config/jwt
            - openssl genrsa -out config/jwt/private.pem 2048
            - openssl rsa -in config/jwt/private.pem -pubout -out config/jwt/public.pem
            - php -r 'echo "OAUTH_ENCRYPTION_KEY=".base64_encode(random_bytes(32)), PHP_EOL;' >> .env.local

    vendor:
        cmds:
            - composer install
        sources:
            - composer.lock
        generates:
            - vendor/**/*

    node_modules:
        cmds:
            - npm install
        sources:
            - package-lock.lock
        generates:
            - node_modules/**/*

    setup_tests:
        cmds:
            - task: vendor
            - task: node_modules
            - bin/console doctrine:database:drop --force --env=test
            - bin/console doctrine:database:create --env=test
            - bin/console doctrine:schema:create --env=test
            - bin/console doctrine:fixtures:load --group=test --no-interaction --env=test
            - bin/console cache:clear --env=test
            - bin/console cache:warmup --env=test

    start:
        desc: Start the development server
        cmds:
            - task: vendor
            - task: node_modules
            - chmod -R 777 public/uploads/
            - bin/console doctrine:schema:update --force  --env=dev
            - symfony proxy:start
            - symfony server:start -d

    stop:
        desc: Stop Docker containers, Symfony server & kill npm dev-server
        cmds:
            - symfony server:stop
            - symfony proxy:stop

    tests:
        desc: Run tests
        cmds:
            - task: setup_tests
            - symfony run bin/phpunit

    coverage:
        desc: Run tests with coverage (required Xdebug)
        cmds:
            - task: setup_tests
            - XDEBUG_MODE=coverage php bin/phpunit --coverage-html=docs/coverage

    phpstan:
        desc: Run PHPStan
        cmds:
            - vendor/bin/phpstan analyse src tests
                
    phpinsights:
        desc: Run PHP Insights
        cmds:
            - vendor/bin/phpinsights
